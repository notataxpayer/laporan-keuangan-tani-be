name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    environment: Production
    strategy:
      matrix:
        node: [20, 22]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run Jest (coverage)
        env:
          CI: 'true'
          NODE_ENV: test
          NODE_OPTIONS: --experimental-vm-modules
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: npm run test:ci

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-node${{ matrix.node }}
          path: coverage

  deploy-railway:
    name: Deploy to Railway
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: npm i -g @railway/cli

      - name: Link & Deploy
        env:
          CI: 'true'
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}   # <-- Project Token
        run: |
          railway link \
            --project "${{ secrets.RAILWAY_PROJECT_ID }}" \
            --service "${{ secrets.RAILWAY_SERVICE_ID }}"
          railway up \
            --service "${{ secrets.RAILWAY_SERVICE_ID }}" \
            --detach --ci --yes --no-confirm
